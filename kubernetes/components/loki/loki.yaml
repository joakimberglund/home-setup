apiVersion: v1
kind: Namespace
metadata:
    name: loki
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: loki-data-pv
  namespace: loki
  labels:
    type: local
spec:
  storageClassName: local-path
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/k3s/volumes/loki"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-data-pvc
  namespace: loki
spec:
  storageClassName: local-path
  volumeName: loki-data-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: loki
  name: loki
  namespace: loki
spec:
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      securityContext:
        fsGroup: 10001
        supplementalGroups:
          - 10001
      containers:
        - name: loki
          image: grafana/loki:latest
          imagePullPolicy: IfNotPresent
          command:
          - /bin/sh
          - -c
          - /usr/bin/loki -config.file=/loki/config.yaml
          ports:
            - containerPort: 3100
              name: loki
              protocol: TCP
          volumeMounts:
            - mountPath: /loki
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: loki-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: loki
spec:
  allocateLoadBalancerNodePorts: true
  ports:
  - name: loki
    port: 3100
    protocol: TCP
    targetPort: loki
  selector:
    app: loki
  sessionAffinity: None
  type: LoadBalancer
  loadBalancerIP: 192.168.0.80
